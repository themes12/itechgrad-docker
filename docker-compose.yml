version: '3.8'

services:
  frontend:
    container_name: itechgrad-frontend
    build:
      context: ./itechgrad
      dockerfile: Dockerfile
    ports:
      - "80:80"  # Adjust port if necessary
    networks:
      - strapi
    depends_on:
      - strapi

  strapi:
    container_name: itechgrad-strapi
    build:
      context: ./itechgrad-cms
      dockerfile: Dockerfile
    ports:
      - "1337:1337"  # Adjust port if necessary
    networks:
      - strapi
    depends_on:
      - strapiDB
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: strapiDB
      DATABASE_PORT: 5432
      DATABASE_NAME: itechgrad
      DATABASE_USERNAME: admin
      DATABASE_PASSWORD: P@$$w0rd@1
      APP_KEYS: w9QmpmbiduXAqi4F0ZsBCA==,flPBsJlGX+qzBTqwqsxhiQ==,wxY6ELNGCmg9cexdovRPDg==,oyv9YGw1RDDWuZQUtSL+SA==
      API_TOKEN_SALT: sGiJAbQzaDB2vlffhhwiqw==
      ADMIN_JWT_SECRET: fv3dDwk+uqB/k0W0Pmfhyg==
      TRANSFER_TOKEN_SALT: KEmadvQO4OMYqa8exkvVzA==
      JWT_SECRET: Jnw5/CRNwpLEbVKT7H3I2g==
      NODE_ENV: production

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: P@$$w0rd@1
      POSTGRES_DB: itechgrad
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - strapi

networks:
  strapi:

volumes:
  strapi-data: