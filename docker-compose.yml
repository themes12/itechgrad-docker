version: '3.8'

services:
  frontend:
    container_name: itechgrad-frontend
    build:
      context: ./itechgrad
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_STRAPI_URL: ${NEXT_STRAPI_URL}
    ports:
      - "80:3000"  # Adjust port if necessary
    networks:
      - strapi
    depends_on:
      - strapi

  strapi:
    container_name: itechgrad-strapi
    build:
      context: ./itechgrad-cms
      dockerfile: Dockerfile
    ports:
      - "1337:1337"  # Adjust port if necessary
    networks:
      - strapi
    depends_on:
      - strapiDB
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${NODE_ENV}

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - strapi

networks:
  strapi:

volumes:
  strapi-data:
